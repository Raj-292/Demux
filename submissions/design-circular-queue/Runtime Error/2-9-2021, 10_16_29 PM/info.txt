{"id":454085666,"lang":"cpp","time":"3 months, 4 weeks","timestamp":1612889189,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/454085666/","is_pending":"Not Pending","title":"Design Circular Queue","memory":"N/A","code":"class MyCircularQueue {\npublic:\n    vector<int> c_queue;\n    int sz;\n    // first points to the front of the queue\n    int first;\n    // last points to the next position after the back\n    int last;\n    int k;\n    MyCircularQueue(int k1) {\n        c_queue.resize(k);\n        sz = 0;\n        first = last = 0;\n        k = k1;\n    }\n    \n    bool enQueue(int value) {\n        if(isFull())\n            return false;\n        \n        // Insert at last\n        c_queue[last] = value;\n        last = (last + 1)%k;\n        sz++;\n        \n        return true;\n    }\n    \n    bool deQueue() {\n        if(isEmpty())\n            return false;\n        \n        first = (first + 1)%k;\n        sz--;\n        \n        return true;\n    }\n    \n    int Front() {\n        if(isEmpty())\n            return -1;\n        \n        return c_queue[first];\n    }\n    \n    int Rear() {\n        if(isEmpty())\n            return -1;\n        \n        return c_queue[(last -1 + k)%k];\n    }\n    \n    bool isEmpty() {\n        return sz == 0;\n    }\n    \n    bool isFull() {\n        return sz == k;\n    }\n};\n\n/**\n * Your MyCircularQueue object will be instantiated and called as such:\n * MyCircularQueue* obj = new MyCircularQueue(k);\n * bool param_1 = obj->enQueue(value);\n * bool param_2 = obj->deQueue();\n * int param_3 = obj->Front();\n * int param_4 = obj->Rear();\n * bool param_5 = obj->isEmpty();\n * bool param_6 = obj->isFull();\n */","compare_result":"000000000000000000000000000000000000000000000000000000","title_slug":"design-circular-queue"}