{"id":436045796,"lang":"cpp","time":"5 months, 1 week","timestamp":1609262781,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/436045796/","is_pending":"Not Pending","title":"Single Number III","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> singleNumber(vector<int>& nums) {\n        // Compute b^f\n        int bxorf = 0;\n        \n        for(int i = 0; i < nums.size(); i++)\n            bxorf ^= nums[i];\n        \n        // Compute the mask\n        int mask = (bxorf)&(~(bxorf-1));\n        \n        // Divide it into two groups\n        int xorg1 = 0, xorg2 = 0;\n        \n        for(int i = 0; i < nums.size(); i++) {\n            // Test whether nums[i] has 1 at the position\n            // specified by the mask\n            // Group 1\n            if((nums[i]&mask) == 0)\n                xorg1 ^= nums[i];\n            // Group 2\n            else\n                xorg2 ^= nums[i];\n        }\n        \n        return {xorg1, xorg2};\n    }\n};","compare_result":"11111111000000000000000000000000","title_slug":"single-number-iii"}