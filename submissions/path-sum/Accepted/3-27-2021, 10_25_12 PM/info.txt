{"id":473084506,"lang":"cpp","time":"2 months, 1 week","timestamp":1616864112,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/473084506/","is_pending":"Not Pending","title":"Path Sum","memory":"21.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void hasPathSumHelper(TreeNode* root, int contri, int targetSum, bool& res) {\n        if (!root)\n            return;\n        \n        // Validation at the leaf node\n        if (!root->left && !root->right){\n            res = res || contri+root->val == targetSum;\n            return;\n        }\n        \n        // Recursive Step\n        hasPathSumHelper(root->left, contri+root->val, targetSum, res);\n        hasPathSumHelper(root->right, contri+root->val, targetSum, res);\n    }\n    bool hasPathSum(TreeNode* root, int targetSum) {\n        bool res = false;\n        \n        hasPathSumHelper(root, 0, targetSum, res);\n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum"}