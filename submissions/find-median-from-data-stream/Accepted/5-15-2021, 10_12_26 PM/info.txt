{"id":493555528,"lang":"cpp","time":"3 weeks, 3 days","timestamp":1621096946,"status_display":"Accepted","runtime":"184 ms","url":"/submissions/detail/493555528/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"47.3 MB","code":"class MedianFinder {\npublic:\n    /** initialize your data structure here. */\n    priority_queue<double,vector<double>,greater<>> minq;\n    priority_queue<double> maxq;\n    // last iteration\n    bool odd = true;\n    \n    MedianFinder() {\n        // \n    }\n    \n    void addNum(int num) {\n        if(odd){\n            minq.push(num);\n            maxq.push(minq.top());\n            minq.pop();\n        } else{\n            maxq.push(num);\n            minq.push(maxq.top());\n            maxq.pop();\n        }\n        odd=!odd;\n    }\n    \n    double findMedian() {\n        if(odd){\n            return ((maxq.top()+minq.top())/2);\n        } else return maxq.top();\n    }\n};\n\n/**\n * Your MedianFinder object will be instantiated and called as such:\n * MedianFinder* obj = new MedianFinder();\n * obj->addNum(num);\n * double param_2 = obj->findMedian();\n */","compare_result":"111111111111111111","title_slug":"find-median-from-data-stream"}