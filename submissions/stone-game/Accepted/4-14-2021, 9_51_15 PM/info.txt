{"id":480603775,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1618417275,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/480603775/","is_pending":"Not Pending","title":"Stone Game","memory":"16.5 MB","code":"class Solution {\npublic:\n    bool stoneGame(vector<int>& piles) {\n        int n = piles.size(), i, j;\n        vector<vector<int>> dp(n, vector<int>(n, 0));\n        \n        // Fill the diagonal\n        for(i = 0; i < n; i++)\n            dp[i][i] = piles[i];\n        \n        for(i = n-2; i >= 0; i--) {\n            for(j = i+1; j < n; j++) {\n                dp[i][j] = max(piles[i] - dp[i+1][j], piles[j] - dp[i][j-1]);\n            }\n        }\n        \n        return dp[0][n-1] > 0;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"stone-game"}