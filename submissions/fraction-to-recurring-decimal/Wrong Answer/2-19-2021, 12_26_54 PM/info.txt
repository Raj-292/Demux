{"id":457892576,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1613717814,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/457892576/","is_pending":"Not Pending","title":"Fraction to Recurring Decimal","memory":"N/A","code":"class Solution {\npublic:\n    string fractionToDecimal(int numerator, int denominator) {\n        string res=\"\";\n        long long int i, n, q, d, rem=0;\n        \n        vector<string> v;\n        unordered_map<int, int> umap;\n       \n        \n        q = numerator/denominator;\n        rem = numerator%denominator;\n        \n        res+= to_string(q);\n       \n        if(rem ==0 )\n            return res;\n        else\n            res+='.';\n        \n       \n        \n        while(rem>0)\n        {\n            if(umap.find(rem) == umap.end())\n            {\n                umap[rem] = res.size();\n                \n                rem*=10;\n                q = rem/denominator;\n                rem = rem%denominator;\n                res+= to_string(q);\n            }\n            else\n            {\n                res = res.substr(0, umap[rem]) + \"(\" + res.substr(umap[rem],  res.size() - umap[rem]) + \")\";\n                break;\n            }\n        }\n        cout<<res;\n        // cout<<(2%3);\n        return res;\n    }\n};","compare_result":"11111111111111111111111101011011110000","title_slug":"fraction-to-recurring-decimal"}