{"id":460543502,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1614262282,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/460543502/","is_pending":"Not Pending","title":"Fraction to Recurring Decimal","memory":"6.3 MB","code":"class Solution {\npublic:\n  void populateAfterDecimal(long num,long den , string& res)\n  {\n      //key: remainder\n      //value: index in the res where the remainder occured first time\n      unordered_map<long , long> m;\n      \n      string ans=\"\";\n      \n      while(num)\n      {\n          //if num is not found in the map\n          if(m.find(num) == m.end())\n          {\n              m[num] = res.size()-1;\n              \n              long q = num/den;\n              long r = num%den;\n              \n              res += to_string(q);\n              \n              if(r==0)\n                  return;\n              num = r*10;\n          }\n          else\n          {\n              ans = res.substr(0 , m[num]+1) + \"(\" + res.substr(m[num]+1, res.size()-m[num]) + \")\";\n              res = ans;\n              break;\n          }\n          \n      }\n      \n   \n  }\n    \n    \n    string fractionToDecimal(int numerator, int denominator) {\n        \n        if(numerator == 0) return \"0\";\n        \n        string res=\"\";\n        \n        //negative result\n        if(numerator < 0 && denominator > 0 || numerator > 0 && denominator < 0)\n            res+= \"-\";\n        \n        long num = abs(numerator);\n        long den = abs(denominator);\n        \n        //before decimal\n        long q = num/den;\n        long rem = num%den;\n        \n        res += to_string(q);\n        \n        if(rem == 0) \n            return res;\n        \n        res += \".\";\n        \n        //after the decimal\n        \n        populateAfterDecimal(rem*10 , den, res);\n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111","title_slug":"fraction-to-recurring-decimal"}