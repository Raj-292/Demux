{"id":469133577,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1616019713,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/469133577/","is_pending":"Not Pending","title":"Fraction to Recurring Decimal","memory":"N/A","code":"class Solution {\npublic:\n    string fractionToDecimal(int numerator, int denominator) {\n        int n = numerator, d = denominator;\n        string ans = \"\";\n        int temp;\n        if(n<0 && m < 0){\n            n = abs(n);\n            m = abs(m);\n        }        \n        if(n<0 || m < 0){\n            ans += \"-\";\n            n = abs(n);\n            m = abs(m);\n        }\n        if(n>=d){\n            temp = n/d;\n            ans += to_string(temp);\n        }\n        else{\n            ans += to_string(0);\n        }\n        temp = n%d;\n        if(temp==0)\n            return ans;\n        \n        ans = ans + \".\";\n        n = temp*10;\n        // cout<<n;\n        unordered_map<int,int> m;\n        int i=0;\n        vector<int> q;\n        while(n!=0 && m.find(n) == m.end()){\n            m[n] = i;\n            i++;\n            if(n<d){\n                // ans += to_string(0);\n                q.push_back(0);\n                n=n*10;\n                continue;\n            } \n            // ans += to_string(n/d);\n            q.push_back(n/d);\n            n=(n%d)*10;\n        }\n        if(n==0){\n            for(int i=0;i<q.size();i++)\n                ans += to_string(q[i]);\n            return ans;\n        }\n            \n        for(int i=0;i<q.size();i++){\n            if(i == m[n])\n                ans += \"(\";\n            ans += to_string(q[i]);\n        }\n        ans += \")\";\n        \n        return ans;\n    }\n};","compare_result":null,"title_slug":"fraction-to-recurring-decimal"}