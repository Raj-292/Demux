{"id":456826052,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1613495065,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/456826052/","is_pending":"Not Pending","title":"Fraction to Recurring Decimal","memory":"N/A","code":"class Solution {\npublic:\n    void populateAfterDecimal(int num, int den, string &res) {\n        // Key: Remainder\n        // Value: Index in res where the remainder occured for the first time\n        unordered_map<int, int> m;\n        \n        string ans = \"\";\n        while(num) {\n            // If num is not found in the map\n            if(m.find(num) == m.end()) {\n                m[num] = res.size()-1;\n                \n                int q = num/den;\n                int r = num%den;\n                \n                res += to_string(q);\n                \n                num = r*10;\n            }\n            else {\n                ans = res.substr(0, m[num]+1) + \"(\" + res.substr(m[num]+1, res.size()-m[num]) + \")\";\n                \n                res = ans;\n                break;\n            }\n        }\n        \n    }\n    string fractionToDecimal(int numerator, int denominator) {\n        \n        if(numerator == 0) return \"0\";\n        \n        string res = \"\";\n        \n        // Negative result\n        if(numerator < 0 && denominator > 0 || numerator > 0 && denominator < 0)\n            res += \"-\";\n        \n        int num = abs(numerator);\n        int den = abs(denominator);\n        \n        // Before the decimal\n        int q = num/den;\n        int rem = num%den;\n        \n        res += to_string(q);\n        \n        // Decimal\n        if(rem == 0)\n            return res;\n        \n        res += \".\";\n        \n        // After the decimal\n        populateAfterDecimal(rem*10, den, res);\n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111000000000","title_slug":"fraction-to-recurring-decimal"}