{"id":451527249,"lang":"cpp","time":"4Â months","timestamp":1612366808,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/451527249/","is_pending":"Not Pending","title":"Evaluate Reverse Polish Notation","memory":"11.9 MB","code":"class Solution {\npublic:\n    bool isOperator(string &op) {\n        return op == \"+\" || op == \"-\" || op == \"/\" || op == \"*\";\n    }\n    \n    int eval(int a, int b, string& op) {\n        if(op == \"+\")\n            return a+b;\n        else if(op == \"-\")\n            return a-b;\n        else if(op == \"*\")\n            return a*b;\n        return a/b;\n    }\n    \n    int evalRPN(vector<string>& tokens) {\n        stack<int> s;\n        \n        for(int i = 0; i < tokens.size(); i++) {\n            // Push a number into the stack\n            if(!isOperator(tokens[i]))\n                s.push(stoi(tokens[i]));\n            else {\n                // Evaluate the top two elements\n                int t1 = s.top();\n                s.pop();\n                \n                int t2 = s.top();\n                s.pop();\n                \n                s.push(eval(t2, t1, tokens[i]));\n            }\n        }\n        \n        return s.top();\n    }\n};","compare_result":"11111111111111111111","title_slug":"evaluate-reverse-polish-notation"}