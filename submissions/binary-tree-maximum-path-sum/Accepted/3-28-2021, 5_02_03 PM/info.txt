{"id":473421406,"lang":"cpp","time":"2 months, 1 week","timestamp":1616931123,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/473421406/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"28.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    // Returns the max sum path (as defined in the Question) of the tree rooted at \"root\" (returned explicitly).\n    // It also returns the max sum of a path that start at \"root\" (returned in max_sum_rooted).\n    int maxPathSumHelper(TreeNode* root, int& max_sum_rooted) {\n        if (!root) {\n            max_sum_rooted = 0;\n            return -1005;\n        }\n        \n        int max_sum_left, max_sum_root_left, max_sum_right, max_sum_root_right;\n        \n        // Get for the left.\n        max_sum_left = maxPathSumHelper(root->left, max_sum_root_left);\n        \n        // Get for the right.\n        max_sum_right = maxPathSumHelper(root->right, max_sum_root_right);\n        \n        // Combine\n        max_sum_rooted = root->val + max(0, max(max_sum_root_left, max_sum_root_right));\n        \n        int max_sum = max(max_sum_left, max_sum_right);\n        \n        max_sum = max(max_sum, max(0, max_sum_root_left) + root->val + max(0, max_sum_root_right));\n        \n        return max_sum;\n        \n    }\n    int maxPathSum(TreeNode* root) {\n        int max_sum_rooted;\n        \n        return maxPathSumHelper(root, max_sum_rooted);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}