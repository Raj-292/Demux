{"id":435718030,"lang":"cpp","time":"5 months, 1 week","timestamp":1609194241,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/435718030/","is_pending":"Not Pending","title":"First Missing Positive","memory":"10.1 MB","code":"class Solution {\npublic:\n    int firstMissingPositive(vector<int>& nums) {\n        int n = nums.size(), k, i, j;\n        \n        // Moving unwanted numbers to the end of the array\n        i = 0, j = n-1;\n        while(i <= j) {\n            if(nums[i] >=1 && nums[i] <= n){\n                i++;\n                continue;\n            }\n            // Here means unwanted\n            swap(nums[i], nums[j]);\n            j--;\n        }\n        \n        // cout << j << endl;\n        \n        // Mark the numbers\n        for(i = 0; i <= j; i++) {\n            if(nums[abs(nums[i])-1] > 0)\n                nums[abs(nums[i])-1] = -1*nums[abs(nums[i])-1];\n        }\n        \n        // cout << nums[0] << \", \" << nums[1] << \", \" << nums[2] << endl;\n        \n        // find the first positive\n        for(i = 0; i <= j; i++) {\n            if(nums[i] > 0)\n                return i+1;\n        }\n        \n        return i+1;\n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-missing-positive"}