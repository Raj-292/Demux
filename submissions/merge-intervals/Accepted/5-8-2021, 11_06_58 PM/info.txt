{"id":490490635,"lang":"cpp","time":"1Â month","timestamp":1620495418,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/490490635/","is_pending":"Not Pending","title":"Merge Intervals","memory":"28.8 MB","code":"typedef vector<int> vit;\nclass Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n        // sort w.r.t start time\n        sort(intervals.begin(),intervals.end(),[](vit a,vit b){\n           return a[0]<b[0]; \n        });\n        \n        // iterate through intevals\n        int n = intervals.size();\n        vector<vit> res;\n        vit prev = intervals[0];\n        \n        // start merging intervals\n        for(int i=1;i<n;i++){\n            vit curr = intervals[i];\n            // if there is a overlap\n            if(prev[1]>=curr[0]){\n                // update the endtime of current\n                prev[1]=max(prev[1],curr[1]);\n            } else{\n                res.push_back(prev);\n                prev = curr;\n            }\n        }\n        // push the last interval\n        res.push_back(prev);\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals"}