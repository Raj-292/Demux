{"id":440350258,"lang":"cpp","time":"5Â months","timestamp":1610128174,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/440350258/","is_pending":"Not Pending","title":"Merge Intervals","memory":"14.6 MB","code":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n        \n        // sort w.r.t start time\n        sort(intervals.begin(),intervals.end());\n        //      ,[=](vector<int> v1, vector<int> v2){\n        //     return v1[0]<v2[0];\n        // });\n        \n        vector<vector<int>> res;\n        int n = intervals.size();\n        if(n==0) return res;\n        // choose the first interval\n        vector<int> prev = intervals[0];\n        \n        // traverse from 2 nd interval\n        for(int i=1;i<n;i++){\n            // both intervals are non overlapping\n            if(intervals[i][0]>prev[1]){\n                res.push_back(prev);\n                prev = intervals[i];\n            } else{\n              // if the intervals are overlapping\n                // update the endtime\n              prev[1] = max(prev[1], intervals[i][1]);\n            }\n        }\n        res.push_back(prev);\n        return res;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals"}