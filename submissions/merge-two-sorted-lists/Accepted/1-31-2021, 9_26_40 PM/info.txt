{"id":450175107,"lang":"cpp","time":"4 months, 1 week","timestamp":1612108600,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/450175107/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        // int x;\n        // int *y = &x;\n        ListNode dummy;\n        ListNode *l3_head = &dummy, *l3_tail = &dummy;\n        \n        ListNode *l1_curr = l1, *l2_curr = l2;\n        \n        while(l1_curr && l2_curr) {\n            // Update l1_curr && insert at the tail\n            if(l1_curr->val <= l2_curr->val) {\n                l3_tail->next = l1_curr;\n                l1_curr = l1_curr->next;\n            }\n            else {\n                l3_tail->next = l2_curr;\n                l2_curr = l2_curr->next;\n            }\n            \n            l3_tail = l3_tail->next;\n            l3_tail->next = NULL;\n        }\n        \n        // When one of them becomes empty\n        if(l1_curr)\n            l3_tail->next = l1_curr;\n        else\n            l3_tail->next = l2_curr;\n        \n        return l3_head->next;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}