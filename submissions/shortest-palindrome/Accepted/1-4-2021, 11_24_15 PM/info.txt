{"id":438517838,"lang":"cpp","time":"5Â months","timestamp":1609782855,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/438517838/","is_pending":"Not Pending","title":"Shortest Palindrome","memory":"8.4 MB","code":"class Solution {\npublic:\n    string shortestPalindrome(string s) {\n        string srev = s;\n        int i = 0, j = srev.size()-1;\n        \n        while(i < j) {\n            swap(srev[i], srev[j]);\n            i++; j--;\n        }\n        \n        string t = s + \"#\" + srev;\n        int n = t.size();\n        // Find out the lps\n        vector<int> lps(n, 0);\n        \n        lps[0] = 0;\n        for(i = 1; i < n; i++) {\n            \n            j = lps[i-1];\n            while(j > 0 && t[j] != t[i])\n                j = lps[j-1];\n            \n            if(t[j] != t[i])\n                lps[i] = 0;\n            else\n                lps[i] = j+1;\n        }\n        \n        string append = srev.substr(0, s.size()-lps[n-1]);\n        \n        return append+s;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-palindrome"}