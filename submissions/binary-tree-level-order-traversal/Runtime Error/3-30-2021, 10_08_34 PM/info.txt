{"id":474342087,"lang":"cpp","time":"2 months, 1 week","timestamp":1617122314,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/474342087/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<TreeNode*> curr_level;\n        vector<TreeNode*> next_level;\n        vector<vector<int>> res;\n        \n        curr_level.push_back(root);\n        \n        while(!curr_level.empty()) {\n            res.push_back(vector<int>());\n            for(int i = 0; i < curr_level.size(); i++) {\n                res[res.size()-1].push_back(curr_level[i]->val);\n\n                // Push the left child if it exists to the next level\n                if (curr_level[i]->left) \n                    next_level.push_back(curr_level[i]->left);\n\n                // Push the right child if it exists to the next level\n                if (curr_level[i]->right)\n                    next_level.push_back(curr_level[i]->right);\n            }\n            curr_level = next_level;\n            next_level = {};\n        }\n        \n        return res;\n        \n    }\n};","compare_result":"1100000000000000000000000000000000","title_slug":"binary-tree-level-order-traversal"}