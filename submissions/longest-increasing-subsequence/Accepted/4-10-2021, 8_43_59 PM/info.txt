{"id":478898742,"lang":"cpp","time":"1 month, 4 weeks","timestamp":1618067639,"status_display":"Accepted","runtime":"276 ms","url":"/submissions/detail/478898742/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.7 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int n = nums.size(), i, j, res = 1;\n        vector<int> dp(n, 1);\n        \n        for(i = 1; i < n; i++) {\n            // Compute dp[i]\n            for(j = i-1; j >= 0; j--) {\n                if (nums[i] > nums[j]) {\n                    dp[i] = max(dp[i], 1+dp[j]);    \n                }\n            }\n            \n            res = max(res, dp[i]);\n        }\n        \n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence"}