{"id":500487585,"lang":"cpp","time":"1 week, 2 days","timestamp":1622398718,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/500487585/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"13.3 MB","code":"class Solution {\npublic:\n      int largestRectangleArea(vector<int>& heights) {\n        heights.push_back(-1);\n        \n        int n = heights.size(),area,width,l,r,res;\n        stack<int> st;\n        \n        for(int i=0;i<n;i++)\n        {\n            //keep poping when top >= curr_num\n            while(!st.empty() && heights[st.top()]>heights[i])\n            {\n                int tp=st.top();\n                st.pop();\n                \n                width=i-1-(st.empty()?-1:st.top());\n                \n                area=width*heights[tp];\n                res=max(res,area);\n            }\n            \n            st.push(i);\n            \n        }\n        cout<<res;\n        st.empty();  \n        return res;\n      }\n            \n        \n    int maximalRectangle(vector<vector<char>>& matrix) {\n        if(matrix.size()==0)\n            return 0;\n        int m=matrix.size(),n=matrix[0].size(),res=0,c=0;\n        \n        for(int i=0;i<m;i++)\n        {\n            vector<int> height(n);\n            \n            \n            for(int j=0;j<n;j++)\n            { \n                 c=0;\n                for(int k=i;k>=0 && matrix[k][j]=='1';k--)\n                {\n                    c++;\n                }\n                \n                height[j]=c;\n            }\n            \n            int area = largestRectangleArea(height);\n          //  cout<<area<<endl;\n            res=max(res,area);\n        }\n        return res;\n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-rectangle"}