{"id":500488338,"lang":"cpp","time":"1 week, 2 days","timestamp":1622398834,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/500488338/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"13.4 MB","code":"class Solution {\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n        heights.push_back(0);\n        \n        stack<int> st;\n        int n = heights.size(), i, res = INT_MIN, tp, right, left, area, width;\n        \n        for(i = 0; i < n; i++) {\n            // Keep popping >= numbers\n            while(!st.empty() && heights[st.top()] >= heights[i]) {\n                // Calculate the histogram\n                tp = st.top();\n                st.pop();\n                \n                right = i;\n                left = st.empty()? -1 : st.top();\n                \n                width = right-left-1;\n                \n                area = width*heights[tp];\n                \n                res = max(res, area);\n            }\n            \n            st.push(i);\n        }\n        cout<<res;\n        return res;\n    }\n    \n    int maximalRectangle(vector<vector<char>>& matrix) {\n        if(matrix.size() == 0) return 0;\n        \n        int i, j, m = matrix.size(), n = matrix[0].size(), k, count = 0, res = INT_MIN;\n        \n        // Go row by row\n        for(i = 0; i < m; i++) {\n            // Construct the histogram with i as the base\n            vector<int> heights(n);\n            for(j = 0; j < n; j++) {\n                count = 0;\n                for(k = i; k >= 0 && matrix[k][j] == '1'; k--) {\n                    count++;\n                }\n                \n                heights[j] = count;\n            }\n            \n            // Get the largest rectangle\n            int lRectangle = largestRectangleArea(heights);\n            \n            res = max(res, lRectangle);\n        }\n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-rectangle"}