{"id":473079377,"lang":"cpp","time":"2 months, 1 week","timestamp":1616863165,"status_display":"Accepted","runtime":"336 ms","url":"/submissions/detail/473079377/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if(!root) return 0;\n        \n        if(!root->left && root->right)\n            return 1+minDepth(root->right);\n        \n        if(!root->right && root->left)\n            return 1+minDepth(root->left);\n        \n        if(!root->left && !root->right)\n            return 1;\n        \n        return 1 + min(minDepth(root->left), minDepth(root->right));\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}