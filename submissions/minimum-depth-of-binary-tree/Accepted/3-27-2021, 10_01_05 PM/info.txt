{"id":473076741,"lang":"cpp","time":"2 months, 1 week","timestamp":1616862665,"status_display":"Accepted","runtime":"440 ms","url":"/submissions/detail/473076741/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepthHelper(TreeNode* root) {\n        if (!root) return INT_MAX;\n        \n        if (!root->left && !root->right)\n            return 1;\n        \n        return 1 + min(minDepthHelper(root->left), minDepthHelper(root->right));\n    }\n    int minDepth(TreeNode* root) {\n        if (!root) return 0;\n        \n        return minDepthHelper(root);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}