{"id":473080214,"lang":"cpp","time":"2 months, 1 week","timestamp":1616863327,"status_display":"Accepted","runtime":"220 ms","url":"/submissions/detail/473080214/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if(!root) return 0;\n        \n        int left_ans = INT_MAX, right_ans = INT_MAX;\n        \n        if(root->left)\n            left_ans = minDepth(root->left);\n        \n        if(root->right)\n            right_ans = minDepth(root->right);\n        \n        if(left_ans == INT_MAX && right_ans == INT_MAX)\n            return 1;\n        \n        return 1+min(left_ans, right_ans);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}