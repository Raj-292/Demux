{"id":435294920,"lang":"cpp","time":"5 months, 1 week","timestamp":1609106026,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/435294920/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"9.9 MB","code":"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        if(matrix.size() == 0) return false;\n        \n        int m = matrix.size(), n = matrix[0].size(), lo, hi, mid, i, j;\n        \n        if(n == 0) return false;\n        \n        lo = 0, hi = m*n-1;\n        \n        // FFFTTTT\n        // p(x): x > target\n        // last F\n        // [F, T]\n        \n        // m = 1, n = 2\n        // lo = 0, hi = 1, mid = 1\n        // i = 1, j = 0;\n        \n        // Next iteration\n        // lo = 0, hi = 0;\n        \n        // i = 1, j = 0;\n        // lo = 0, hi = 0, mid = 1, i = 1, j = 0;\n        while(lo < hi) {\n            mid = lo + (hi-lo+1)/2;\n            \n            i = mid/n;\n            j = mid%n;\n            \n            if(matrix[i][j] > target)\n                hi = mid-1;\n            else\n                lo = mid;\n  \n        }\n        \n        // Sanity check\n        i = lo/n;\n        j = lo%n;\n        \n        if(matrix[i][j] == target)\n            return true;\n        \n        return false;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix"}