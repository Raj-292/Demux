{"id":475571034,"lang":"cpp","time":"2 months, 1 week","timestamp":1617381877,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/475571034/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"11.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void rightSideViewHelper(TreeNode* root, int& ht, vector<int>& res) {\n        if (!root)\n            return;\n        \n        if (res.size() <= ht) {\n            res.push_back(root->val);\n        }\n        \n        ++ht;\n        rightSideViewHelper(root->right, ht, res);\n        rightSideViewHelper(root->left, ht, res);\n        --ht;\n    }\n    vector<int> rightSideView(TreeNode* root) {\n        vector<int> res;\n        int ht = 0;\n        rightSideViewHelper(root, ht, res);\n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}