{"id":476879331,"lang":"cpp","time":"2Â months","timestamp":1617644320,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/476879331/","is_pending":"Not Pending","title":"Climbing Stairs","memory":"6.2 MB","code":"class Solution {\npublic:\n    // Returns the number of ways you can climb to top\n    int climbStairsHelper(int n, vector<int>& dp) {\n        // Base cases\n        if (n == 1)\n            return 1;\n        \n        if (n == 2)\n            return 2;\n        \n        // Recursive step\n        // Have I solved the subproblem?\n        if (dp[n] != -1)\n            return dp[n];\n        \n        // If I haven't solved it.\n        // Solve it now and store it\n        dp[n] = climbStairsHelper(n-1, dp) + climbStairsHelper(n-2, dp);\n        \n        return dp[n];\n    }\n    int climbStairs(int n) {\n        vector<int> dp(n+1, -1);\n        \n        return climbStairsHelper(n, dp);\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"climbing-stairs"}