{"id":445955368,"lang":"cpp","time":"4 months, 2 weeks","timestamp":1611247556,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/445955368/","is_pending":"Not Pending","title":"Permutation Sequence","memory":"5.9 MB","code":"class Solution {\npublic:\n    int fact(int n) {\n        int i, res = 1;\n        for(i = 1; i <= n; i++)\n            res = res * i;\n        \n        return res;\n    }\n    \n    // Returns the pos unvisited number\n    // pos = 3 returns the 3rd unvisited number\n    int getNumber(vector<int>& visited, int pos) {\n        int count = 0;\n        for(int i = 1; i <= 9; i++) {\n            if(visited[i]) continue;\n            \n            count++;\n            if(count == pos)\n                return i;\n        }\n        \n        // NF - It won't reach here\n        return -1;\n    }\n    \n    string getPermutation(int n, int k) {\n        // Jai shree ram\n        // Jai shree Jesus\n        // Jai allah\n        // Jai Jinendra\n        // chunk_id is 0 based\n        int i, chunk_id, pos, curr_digit, copy_n = n;\n        string res = \"\";\n        \n        vector<int> visited(10, 0);\n        \n        for(i = 1; i <= copy_n; i++) {\n            // Get the chunk id\n            chunk_id = (k-1)/fact(n-1);\n            \n            // Get the corresponding digit\n            pos = chunk_id+1;\n            curr_digit = getNumber(visited, pos);\n            res = res + to_string(curr_digit);\n            \n            // Mark this position as visited\n            visited[curr_digit] = 1;\n            \n            // Update n and k\n            k = k - (chunk_id*fact(n-1));\n            n--;\n        }\n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-sequence"}