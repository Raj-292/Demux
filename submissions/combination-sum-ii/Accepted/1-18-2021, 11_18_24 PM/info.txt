{"id":444646777,"lang":"cpp","time":"4 months, 3 weeks","timestamp":1610992104,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/444646777/","is_pending":"Not Pending","title":"Combination Sum II","memory":"13.7 MB","code":"class Solution {\npublic:\n    void f(vector<int>&candidates, int start, int end, vector<int>&contri, vector<vector<int> >&res, int target) {\n        //Base Case :\n        if(target == 0) {\n            res.push_back(contri);\n            return;\n        }\n        if(target < 0 || start > end)\n            return;\n        \n        //Recursive Step:\n        //next different number:\n        int j = start;\n        while(j <= end && candidates[j] == candidates[start])\n            j++;\n        \n        //Where start element is not included at all:\n        f(candidates, j, end, contri, res, target);\n        \n        //if start element is included in contri:\n        contri.push_back(candidates[start]);\n        \n        //changing target to target - element because it is included:\n        f(candidates, start+1, end, contri, res, target - candidates[start]);\n        contri.pop_back();\n    }\n    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {\n        sort(candidates.begin(), candidates.end());\n        vector<vector<int> >res;\n        vector<int>contri;\n        f(candidates, 0, candidates.size()-1, contri, res, target);\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum-ii"}