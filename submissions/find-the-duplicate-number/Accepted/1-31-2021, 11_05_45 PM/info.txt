{"id":450206218,"lang":"cpp","time":"4 months, 1 week","timestamp":1612114545,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/450206218/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"11 MB","code":"class Solution {\npublic:\n    int findDuplicate(vector<int>& nums) {\n        // Slow & fast\n        int slow = 0, fast = 0;\n        \n        // Detect cycle\n        do {\n            slow = nums[slow];\n            fast = nums[nums[fast]];\n            \n        }while(slow != fast);\n        \n        // Find the tip of the cycle\n        int p2 = slow, p1 = 0;\n        \n        while(p1 != p2) {\n            p1 = nums[p1];\n            p2 = nums[p2];\n        }\n        \n        return p1;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"find-the-duplicate-number"}