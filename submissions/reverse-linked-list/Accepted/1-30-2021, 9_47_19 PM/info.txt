{"id":449741942,"lang":"cpp","time":"4Â months, 1Â week","timestamp":1612023439,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/449741942/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    void f(ListNode* head, ListNode** new_head, ListNode** new_tail) {\n        if(!head) return;\n        \n        f(head->next, new_head, new_tail);\n        \n        (*new_tail)->next = head;\n        (*new_tail) = (*new_tail)->next;\n\n        \n        head->next = NULL;\n    }\n    \n    ListNode* reverseList(ListNode* head) {\n        ListNode *new_head, *new_tail;\n        ListNode dummy;\n        \n        new_head = new_tail = &dummy;\n        \n        f(head, &new_head, &new_tail);\n        \n        return new_head->next;\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"reverse-linked-list"}