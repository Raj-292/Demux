{"id":436441980,"lang":"cpp","time":"5 months, 1 week","timestamp":1609343705,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/436441980/","is_pending":"Not Pending","title":"Valid Palindrome II","memory":"19.8 MB","code":"class Solution {\npublic:\n    bool isPalindrome(string &s, int start, int end) {\n        while(start <= end && s[start] == s[end]) {\n            start++; end--;\n        }\n        \n        return (start > end);\n    }\n    bool validPalindrome(string s) {\n        // Find the position of first mismatch\n        int n = s.size(), start = 0, end = n-1;\n        \n        while(start <= end && s[start] == s[end]) {\n            start++; end--;\n        }\n        \n        // If no mismatch then already a palindrome\n        if(start > end) return true;\n        \n        // Otherwise try deleting the start or end\n        return (isPalindrome(s, start+1, end) || isPalindrome(s, start, end-1));\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-palindrome-ii"}