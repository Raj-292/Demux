{"id":447764919,"lang":"cpp","time":"4 months, 2 weeks","timestamp":1611607757,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/447764919/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"49.3 MB","code":"class Solution {\npublic:\n    bool ispalindrome(string& a){\n        int i=0;\n        int j=a.size()-1;\n        while(i<=j){\n            if(a[i]!=a[j])\n                return false;\n            i++; j--;\n        }\n        return true;\n    }\n    void f(string& s, int start, vector<string>& contri, vector<vector<string>>& res){\n        if(start==s.size())\n        {\n            res.push_back(contri);\n            return;\n        }\n        string a;\n        for(int i=start; i<s.size(); i++){\n            a=s.substr(start, i-start+1);\n            if(!ispalindrome(a))\n                continue;\n            contri.push_back(a);\n            f(s, i+1,contri, res);\n            contri.pop_back();\n        }\n    }\n    vector<vector<string>> partition(string s) {\n        vector<vector<string>> res;\n        vector<string> contri;\n        f(s, 0,contri, res);\n        return res;\n    }  \n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning"}