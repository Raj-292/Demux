{"id":468684526,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1615930209,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/468684526/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"49.3 MB","code":"class Solution {\npublic:\n    bool ispalindrome(string a){\n        int i=0, j=a.size()-1;\n        while(i<=j && a[i]==a[j]){\n            i++;\n            j--;\n        }\n        if(i>j) return true;\n        return false;\n    }\n    \n    void f(string& s, vector<string>& contri, vector<vector<string>>& ans, int start){\n        //Base\n        if(start == s.size()){\n            ans.push_back(contri);\n            return;\n        }\n        \n        //Recursion\n        for(int i=start; i<s.size();i++){\n            string a = s.substr(start, i-start+1);\n            if( ispalindrome(a)){\n                contri.push_back(a);\n                f(s, contri, ans, i+1);\n                contri.pop_back();\n            }\n        }\n        return;\n    }\n    \n    vector<vector<string>> partition(string s) {\n        vector<vector<string>> ans;\n        vector<string> contri;\n        f(s,contri, ans, 0);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning"}