{"id":473032857,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1616853532,"status_display":"Accepted","runtime":"260 ms","url":"/submissions/detail/473032857/","is_pending":"Not Pending","title":"Time Based Key-Value Store","memory":"127.9 MB","code":"class TimeMap {\npublic:\n    /** Initialize your data structure here. */\n    unordered_map<string, vector<pair<int, string>>> m;\n    TimeMap() {\n        \n    }\n    \n    void set(string key, string value, int timestamp) {\n        m[key].push_back(make_pair(timestamp, value));\n    }\n    \n    string get(string key, int timestamp) {\n        vector<pair<int, string>> &v = m[key];\n        \n        int lo=0, hi=v.size()-1, mid = 0 ;\n        \n        while(lo<hi){\n            mid = lo+(hi-lo+1)/2;\n            if(v[mid].first <= timestamp){\n                lo=mid;\n                \n            }else{\n                hi = mid-1;\n            }\n        }\n        if(v[lo].first<=timestamp)\n            return v[lo].second;\n        else \n            return \"\";\n    }\n};\n\n/**\n * Your TimeMap object will be instantiated and called as such:\n * TimeMap* obj = new TimeMap();\n * obj->set(key,value,timestamp);\n * string param_2 = obj->get(key,timestamp);\n */","compare_result":"111111111111111111111111111111111111111111111","title_slug":"time-based-key-value-store"}