{"id":488772054,"lang":"cpp","time":"1Â month","timestamp":1620138923,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/488772054/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool lca(TreeNode* root,TreeNode* p,TreeNode* q,TreeNode** res){\n        if(root ==  NULL){\n            return false;\n        }\n        \n        bool f1 = lca(root->left,p,q,res);\n        bool f2 = lca(root->right,p,q,res);\n        \n        if((f1 && f2) || (root == p || root == q) && (f1 || f2)){\n            *res = root;\n        }\n        \n        return (f1 || f2 || root == p || root == q);\n        \n    }\n    \n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        TreeNode* res ==  NULL;\n        \n        bool r = lca(root,p,q,&res);\n        \n        return res;\n    }\n};","compare_result":null,"title_slug":"lowest-common-ancestor-of-a-binary-tree"}