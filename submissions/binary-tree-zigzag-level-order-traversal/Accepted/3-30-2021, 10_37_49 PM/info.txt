{"id":474351517,"lang":"cpp","time":"2 months, 1 week","timestamp":1617124069,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/474351517/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> res;\n        \n        if (!root)\n            return res;\n        \n        vector<stack<TreeNode*>> v(2);\n        int level = 0, next_level;\n        \n        v[level%2].push(root);\n        \n        while(!v[level%2].empty()) {\n            next_level = level+1;\n            res.push_back(vector<int>());\n            \n            while(!v[level%2].empty()) {\n                TreeNode* t = v[level%2].top();\n                v[level%2].pop();\n                \n                res[res.size()-1].push_back(t->val);\n                \n                if(level%2) {\n                    if (t->right)\n                        v[next_level%2].push(t->right);\n                    \n                    if (t->left)\n                        v[next_level%2].push(t->left);\n                    \n                } else {\n                    if (t->left)\n                        v[next_level%2].push(t->left);\n                    \n                    if (t->right)\n                        v[next_level%2].push(t->right);\n                }\n            }\n            \n            level = next_level;\n        }\n        \n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal"}