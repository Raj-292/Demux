{"id":478568714,"lang":"cpp","time":"2Â months","timestamp":1617986054,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/478568714/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"12 MB","code":"class Solution {\npublic:\n    int maxProduct(vector<int>& nums) {\n        int n = nums.size(), i, res = INT_MIN;\n        vector<int> minProd(n+1, 1);\n        vector<int> maxProd(n+1, 1);\n        \n        for(i = 1; i <= n; i++) {\n            minProd[i] = min(nums[i-1], min(nums[i-1]*minProd[i-1], nums[i-1]*maxProd[i-1]));\n            maxProd[i] = max(nums[i-1], max(nums[i-1]*minProd[i-1], nums[i-1]*maxProd[i-1]));\n            res = max(res, maxProd[i]);\n        }\n        \n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}