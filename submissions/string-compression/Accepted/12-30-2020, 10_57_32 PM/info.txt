{"id":436468311,"lang":"cpp","time":"5 months, 1 week","timestamp":1609349252,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/436468311/","is_pending":"Not Pending","title":"String Compression","memory":"9.1 MB","code":"class Solution {\npublic:\n    int compress(vector<char>& chars) {\n        int n = chars.size(), i, j, curr_char, curr_count;\n        \n        // First chunk\n        curr_char = chars[0];\n        curr_count = 1;\n        // j stores the first positon where I can insert\n        j = 0;\n        \n        for(i = 1; i < n; i++) {\n            if(chars[i] == curr_char)\n                curr_count++;\n            else {\n                // Time to insert this string\n                // Insert the character\n                chars[j] = curr_char;\n                j++;\n                // Insert the count\n                if(curr_count > 1) {\n                    string count_str = to_string(curr_count);\n                    int len = 0;\n                    \n                    while(len < count_str.size()) {\n                        chars[j] = count_str[len];\n                        j++;\n                        len++;\n                    }\n                }\n                \n                // Update curr_char and curr_count for the next iteration\n                curr_char = chars[i];\n                curr_count = 1;\n            }\n        }\n        \n        // Process the last chunk\n        chars[j] = curr_char;\n        j++;\n        if(curr_count > 1) {\n            string count_str = to_string(curr_count);\n            int len = 0;\n\n            while(len < count_str.size()) {\n                chars[j] = count_str[len];\n                j++;\n                len++;\n            }\n        }\n        \n        return j;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"string-compression"}