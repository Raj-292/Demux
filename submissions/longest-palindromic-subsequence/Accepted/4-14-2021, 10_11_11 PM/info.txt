{"id":480610361,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1618418471,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/480610361/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"72.9 MB","code":"class Solution {\npublic:\n    int longestPalindromeSubseq(string s) {\n        int n = s.size(), len, i;\n        vector<vector<int>> dp(n, vector<int>(n, 0));\n        \n        // Length wise\n        for (len = 1; len <= n; len++) {\n            for(i = 0; i+len-1 < n; i++) {\n                if (len == 1)\n                    dp[i][i] = 1;\n                else {\n                    // s[i][i+len-1]\n                    if (s[i] == s[i+len-1])\n                        dp[i][i+len-1] = 2 + (i+1 > i+len-2? 0: dp[i+1][i+len-2]);\n                    else\n                        dp[i][i+len-1] = max(dp[i+1][i+len-1], dp[i][i+len-2]);\n                }\n            }\n        }\n        \n        return dp[0][n-1];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence"}