{"id":499174105,"lang":"cpp","time":"1 week, 5 days","timestamp":1622152112,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/499174105/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n  void maxDepthhelper(TreeNode* root,int contri,int &res)\n    {\n       if(root==NULL) return ;\n        if(!root->left && !root->right)\n        {\n             res=max(res,1+contri);\n             return;\n        }\n      \n        maxDepthhelper(root->left,contri+1,res);\n        maxDepthhelper(root->right,contri+1,res);\n        \n        \n    }\n    int maxDepth(TreeNode* root) {\n        int contri=0;\n        int res=0;\n        maxDepthhelper(root,contri,res);\n        return res;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}