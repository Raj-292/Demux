{"id":454874235,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1613062567,"status_display":"Accepted","runtime":"228 ms","url":"/submissions/detail/454874235/","is_pending":"Not Pending","title":"Group Anagrams","memory":"75.2 MB","code":"class Solution {\npublic:\n    string getGroupId(string &s) {\n        vector<int> freq(26, 0);\n        \n        for(auto &ch : s) {\n            freq[ch-'a']++;\n        }\n        \n        string res = \"\";\n        for(int i = 0; i < 26; i++) {\n            res = res + to_string(freq[i]) + \"#\";\n        }\n        \n        return res;\n    }\n    vector<vector<string>> groupAnagrams(vector<string>& strs) {\n        vector<vector<string>> res;\n        unordered_map<string, int> m;\n        \n        int i;\n        for (i = 0; i < strs.size(); i++) {\n            // Let's get the group identifier\n            string id = getGroupId(strs[i]);\n            \n            // If this is the first element of the group\n            if(m.find(id) == m.end()) {\n                m[id] = res.size();    \n                res.push_back({});\n                \n            }\n            res[m[id]].push_back(strs[i]);\n        }\n        \n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams"}