{"id":477162329,"lang":"cpp","time":"2Â months","timestamp":1617695454,"status_display":"Accepted","runtime":"204 ms","url":"/submissions/detail/477162329/","is_pending":"Not Pending","title":"Group Anagrams","memory":"76.5 MB","code":"class Solution {\npublic:\n    string getGroupId(string& s) {\n        vector<int> freq(26, 0);\n        \n        for(const auto& ch : s) {\n            freq[ch-'a']++;\n        }\n        \n        string res = \"\";\n        for(const auto& num : freq) {\n            res = res + to_string(num) + \"#\";\n        }\n        \n        return res;\n    }\n    vector<vector<string>> groupAnagrams(vector<string>& strs) {\n        // Define history\n        unordered_map<string, vector<string>> history;\n        \n        for (auto& ana : strs) {\n            // Get the group id\n            string g_id = getGroupId(ana);\n            history[g_id].push_back(ana);\n        }\n        \n        // Convert this hash map to a vector of vectors.\n        vector<vector<string>> res;\n        for (auto& entry : history) {\n            res.push_back(entry.second);\n        }\n        \n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams"}