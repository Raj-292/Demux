{"id":451075931,"lang":"cpp","time":"4Â months","timestamp":1612280729,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/451075931/","is_pending":"Not Pending","title":"Min Stack","memory":"16 MB","code":"class MinStack {\npublic:\n    /** initialize your data structure here. */\n    stack<int> s1; // Empty stack of integers\n    stack<int> s2; // Empty stack of integers\n    // s1.push(x), s1.pop(), s1.top(), s1.empty()\n    MinStack() {\n    }\n    \n    void push(int x) {\n        // Push into s1\n        s1.push(x);\n        // Push into s2\n        // push the min of top and x\n        if(s2.empty())\n            s2.push(x);\n        else\n            s2.push(min(x, s2.top()));\n    }\n    \n    void pop() {\n        s1.pop();\n        s2.pop();\n    }\n    \n    int top() {\n        return s1.top();\n    }\n    \n    int getMin() {\n        return s2.top();\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(x);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"111111111111111111","title_slug":"min-stack"}