{"id":467236090,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1615645197,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/467236090/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"11.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        ListNode *r,*q,*p,*res;\n        p=head;\n        r=head;\n        int num=0;\n        while(r)\n        {\n            num++;\n            r=r->next;\n        }\n        int flag=0;\n        int val=num/k;\n        ListNode *point2=NULL;\n        while(val--)\n        {\n            r=NULL;\n            q=NULL;\n            int count=0;ListNode *point=p;\n            while(count!=k)\n            {\n                r=q;\n                q=p;\n                p=p->next;\n                q->next=r;\n                count++;  \n            }\n            if(flag==0)res=q,flag++;\n            point->next=p;\n            if(point2)point2->next=q;\n            point2=point;\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group"}