{"id":445525873,"lang":"cpp","time":"4 months, 2 weeks","timestamp":1611160373,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/445525873/","is_pending":"Not Pending","title":"N-Queens","memory":"7.1 MB","code":"class Solution {\npublic:\n    void f(vector<bool> &col, vector<bool>& pd, vector<bool>& sd, int rem, vector<string>& contri, vector<vector<string>>& res, int n) {\n        // Base step\n        if(rem == 0) {\n            res.push_back(contri);\n            return;\n        }\n        \n        // Recursive step\n        // C1 to CN\n        // Try n-rem row\n        int i, j = n-rem;\n        for(i = 0; i < n; i++) {\n            // Check if this is a valid position\n            // Check if possible in the current col\n            if(!col[i] &&\n              !pd[i+j] &&\n              !sd[j-i+n-1]) {\n                col[i] = pd[i+j] = sd[j-i+n-1] = true;\n                contri[j][i] = 'Q';\n                f(col, pd, sd, rem-1, contri, res, n);\n                contri[j][i] = '.';\n                col[i] = pd[i+j] = sd[j-i+n-1] = false;\n            }\n        }\n    }\n    vector<vector<string>> solveNQueens(int n) {\n        vector<vector<string>> res;\n        vector<string> contri(n, string(n, '.'));\n        vector<bool> col(n, false), pd(2*n-1, false), sd(2*n-1, false);\n        \n        f(col, pd, sd, n, contri, res, n);\n        \n        return res;\n    }\n};","compare_result":"111111111","title_slug":"n-queens"}