{"id":499067952,"lang":"cpp","time":"1 week, 5 days","timestamp":1622133344,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/499067952/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"7.9 MB","code":"class Solution {\npublic:\n    string minWindow(string s, string t) {\n        vector<int>hash(256,0);\n            int head=0,minLength=INT_MAX;\n        for(char c:t)hash[c]++;\n        int count=0;\n        int p1=0,p2=0;\n        while(p2<s.size()){\n            //adding logic\n            if(hash[s[p2]]>0) count++;\n            hash[s[p2]]--;\n            p2++;\n            \n            //exist logic\n            while(count==t.size())\n            {\n                if(p2-p1<minLength)\n                {\n                    minLength=p2-p1;\n                    head=p1;\n\n                }\n            \n            //removal criteria\n            if(hash[s[p1]]==0)count--;\n            hash[s[p1]]++;\n            p1++;\n\n}\n    }\n        if(minLength==INT_MAX)return\"\";\n        else\n            return s.substr(head,minLength);\n\n        }\n        \n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring"}