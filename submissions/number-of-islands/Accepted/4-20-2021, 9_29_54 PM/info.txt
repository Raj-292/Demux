{"id":483076201,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1618934394,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/483076201/","is_pending":"Not Pending","title":"Number of Islands","memory":"9.5 MB","code":"class Solution {\npublic:\n    vector<vector<int>> nbrs = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\n    void dfs(vector<vector<char>>& grid, int i, int j) {\n        grid[i][j] = '0';\n        \n        // Perform dfs on the neighbors.\n        for (auto& nbr: nbrs) {\n            int x = i + nbr[0];\n            int y = j + nbr[1];\n            \n            // (x, y) is adjacent to (i, j)\n            if (x < 0 || y < 0 || x >= grid.size() || y >= grid[0].size() \n                || grid[x][y] == '0')\n                continue;\n            \n            dfs(grid, x, y);\n        }\n    }\n    int numIslands(vector<vector<char>>& grid) {\n        int res = 0;\n        \n        for (int i = 0; i < grid.size(); i++) {\n            for(int j = 0; j < grid[0].size(); j++) {\n                if (grid[i][j] == '1') {\n                    dfs(grid, i, j);\n                    res++;\n                }\n            }\n        }\n        \n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}