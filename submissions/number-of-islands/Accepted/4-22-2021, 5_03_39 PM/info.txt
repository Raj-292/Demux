{"id":483817665,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1619091219,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/483817665/","is_pending":"Not Pending","title":"Number of Islands","memory":"9.7 MB","code":"class Solution {\npublic:\n    vector<vector<int> > offset = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\n    void dfs(int i, int j, vector<vector<char> > &graph, vector<vector<bool> > &visited) {\n        visited[i][j] = true;\n        \n        for(int k = 0; k < 4; k++) {\n            int x = i + offset[k][0];\n            int y = j + offset[k][1];\n            \n            if(x < 0 || y < 0 || x >= graph.size() || y >= graph[0].size() || visited[x][y] || graph[x][y] == '0')\n                continue;\n            dfs(x, y, graph, visited);\n        }\n    }\n    \n    int numIslands(vector<vector<char>>& grid) {\n        int i, j, n = grid.size(), m = grid[0].size(), res = 0;\n        vector<vector<bool> > visited(n, vector<bool>(m, false));\n        \n        for(i = 0; i < n; i++) {\n            for(j = 0; j < m; j++) {\n                if(!visited[i][j] && grid[i][j] == '1') {\n                    res++;\n                    dfs(i, j, grid, visited);\n                }\n            }\n        }\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}