{"id":436275214,"lang":"cpp","time":"5 months, 1 week","timestamp":1609304353,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/436275214/","is_pending":"Not Pending","title":"Single Number II","memory":"9.8 MB","code":"class Solution {\npublic:\n   int singleNumber(vector<int>& nums) {\n       int c = 0, i, j, count, ci;\n        \n        // Fix a position\n        for(i = 0; i < 32; i++) {\n            // Get the count of 1s in this position\n            count = 0;\n            for(j = 0; j < nums.size(); j++) {\n                // Test whether ith bit of nums[j] is set\n                // Increment count accordingly\n                count += nums[j]&(1<<i) ? 1: 0;\n            }\n            \n            ci = count%3;\n            \n            // Set the ith bit if needed\n            // c = c | (ci<<i);\n            if(ci)\n                c = c | (1<<i);\n        }\n        \n        return c;\n    }\n};","compare_result":"11111111111111","title_slug":"single-number-ii"}