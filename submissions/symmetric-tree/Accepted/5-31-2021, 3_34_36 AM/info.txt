{"id":500566486,"lang":"cpp","time":"1 week, 2 days","timestamp":1622412276,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/500566486/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool areSymmetric(TreeNode* t1, TreeNode* t2) {\n        \n        if(!t1 && !t2)\n        {\n            return true;\n        }\n        if(!t1 || !t2)\n        {\n            return false;\n        }\n        return t1->val==t2->val && areSymmetric(t1->left, t2->right) && areSymmetric(t1->right, t2->left);\n    }\n    \n    bool isSymmetric(TreeNode* root) {\n   \n        return areSymmetric(root->left,root->right);\n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}