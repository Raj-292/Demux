{"id":473096257,"lang":"cpp","time":"2 months, 1 week","timestamp":1616866338,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/473096257/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    // jg = jai gurudev\n    // jai shree ram\n    bool areSymmetric(TreeNode* t1, TreeNode* t2) {\n        // Base cases\n        if (!t1 && !t2) return true;\n        \n        if (!t1 || !t2) return false;\n        \n        // Recursive case\n        return t1->val == t2->val && \n               areSymmetric(t1->left, t2->right) &&\n               areSymmetric(t1->right, t2->left);\n    }\n    bool isSymmetric(TreeNode* root) {\n        return areSymmetric(root->left, root->right);   \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}