{"id":445103549,"lang":"cpp","time":"4 months, 2 weeks","timestamp":1611076604,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/445103549/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"N/A","code":"class Solution {\npublic:\n    vector<string> digitToAlphabet;\n    \n    void initializeMap() {\n        digitToAlphabet.resize(10);\n        \n        digitToAlphabet[2] = \"abc\";\n        digitToAlphabet[3] = \"def\";\n        digitToAlphabet[4] = \"ghi\";\n        digitToAlphabet[5] = \"jkl\";\n        digitToAlphabet[6] = \"mno\";\n        digitToAlphabet[7] = \"pqrs\";\n        digitToAlphabet[8] = \"tuv\";\n        digitToAlphabet[9] = \"wxyz\";\n    }\n    void f(string& digits, int start, string& contri, vector<string>& res) {\n        // Base step\n        if(start == digits.size()) {\n            res.push_back(contri);\n            return;\n        }\n        \n        for(int i = 0; i < digitToAlphabet[digits[start]-'0'].size(); i++) {\n            contri.push_back(digitToAlphabet[digits[start]-'0'][i]);\n            f(digits, start+1, contri, res);\n            contri.pop_back();\n        }\n    }\n    vector<string> letterCombinations(string digits) {\n        vector<string> res;\n        string contri;\n        \n        initializeMap();\n        \n        f(digits, 0, contri, res);\n        \n        return res;\n    }\n};","compare_result":"1011111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}